tosca_definitions_version: tosca_2_0
metadata:
  template_author: CNA modeling tool
  template_name: lakesideMutual
  template_version: '0.2'
description: Service template generated by the CNA modeling tool
service_template:
  description: Topology template generated by the CNA modeling tool
  node_templates:
    customer:
      type: cna-modeling.entities.DataAggregate
      metadata:
        label: Customer
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '240'
        position_yCoord: '1190'
      capabilities:
        provides_data: {}
    policy:
      type: cna-modeling.entities.DataAggregate
      metadata:
        label: Policy
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '240'
        position_yCoord: '1240'
      capabilities:
        provides_data: {}
    insurance_quote:
      type: cna-modeling.entities.DataAggregate
      metadata:
        label: Insurance Quote
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '150'
        position_yCoord: '1220'
      capabilities:
        provides_data: {}
    interaction_log:
      type: cna-modeling.entities.DataAggregate
      metadata:
        label: Interaction Log
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '750'
        position_yCoord: '262.86'
      capabilities:
        provides_data: {}
    user:
      type: cna-modeling.entities.DataAggregate
      metadata:
        label: User
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '710'
        position_yCoord: '712.86'
      capabilities:
        provides_data: {}
    policy_backend_secrets:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Policy Backend Secrets
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '710'
        position_yCoord: '1320'
      capabilities:
        provides_data: {}
      properties:
        kind: secret
        included_data:
          apikey.value: 999ab497f8ec1052
          spring.datasource.username: sa
          spring.datasource.password: sa
          spring.activemq.user: queueuser
          spring.activemq.password: secret
    policy_backend_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Policy Backend Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '710'
        position_yCoord: '1270'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          spring.application.name: policy-management-backend
          spring.datasource.url: jdbc:h2:file:./policymanagement
          spring.datasource.driver-class-name: org.h2.Driver
          server.port: '8090'
          policymanagement.stompBrokerBindAddress: stomp://0.0.0.0:61613
          policymanagement.tcpBrokerBindAddress: tcp://0.0.0.0:61616
          customercore.baseURL: http://localhost:8110
          spring.boot.admin.client.url: http://localhost:9000
    customer_backend_secrets:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Customer Backend Secrets
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '630'
        position_yCoord: '202.86'
      capabilities:
        provides_data: {}
      properties:
        kind: secret
        included_data:
          datasource.username: sa
          datasource.password: sa
          apikey.value: 9b93ebe19e16bbbd
    customer_backend_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Customer Backend Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '740'
        position_yCoord: '202.86'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          spring.datasource.url: jdbc:h2:file:./customermanagement
          spring.application.name: customer-management-backend
          spring.datasource.driver-class-name: org.h2.Driver
          server.port: '8100'
          customercore.baseURL: http://localhost:8110
          spring.boot.admin.client.url: http://localhost:9000
    risk_management_secrets:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Risk Management Secrets
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '690'
        position_yCoord: '1590'
      capabilities:
        provides_data: {}
      properties:
        kind: secret
        included_data:
          spring.application.name: spring-boot-admin
          server.port: '9000'
    risk_management_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Risk Management Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '700'
        position_yCoord: '1660'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          activemq.host: localhost
          activemq.port: '61613'
          grpc.host: 0.0.0.0
          grpc.port: '50051'
    customer_core_secrets:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Customer Core Secrets
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1320'
        position_yCoord: '290'
      capabilities:
        provides_data: {}
      properties:
        kind: secret
        included_data:
          apikey.validkeys: b318ad736c6c844b;999ab497f8ec1052;9b93ebe19e16bbbd
          datasource.username: sa
          datasource.password: sa
    customer_core_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Customer Core Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1320'
        position_yCoord: '330'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          spring.application.name: customer-core
          spring.datasource.url: jdbc:h2:file:./customercore
          spring.datasource.driver-class-name: org.h2.Driver
          server.port: '8110'
          spring.boot.admin.client.url: http://localhost:9000
    springboot_admin_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: SpringBoot Admin Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1290'
        position_yCoord: '110'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          spring.application.name: spring-boot-admin
          server.port: '9000'
    self_service_secrets:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Self-Service Secrets
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '740'
        position_yCoord: '862.86'
      capabilities:
        provides_data: {}
      properties:
        kind: secret
        included_data:
          apikey.value: b318ad736c6c844b
          spring.datasource.username: sa
          spring.datasource.password: sa
    customer_self_service_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Customer Self-Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '740'
        position_yCoord: '820'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          policymanagement.tcpBrokerBindAddress: tcp://localhost:61616
          spring.application.name: customer-self-service-backend
          spring.datasource.url: jdbc:h2:file:./customerselfservice
          spring.datasource.driver-class-name: org.h2.Driver
          server.port: '8080'
          customercore.baseURL: http://localhost:8110
          spring.boot.admin.client.url: http://localhost:9000
    private_subnet:
      type: cna-modeling.entities.Network
      metadata:
        label: Private Subnet
        fontSize: '14'
        size_width: '100'
        size_height: '100'
        position_xCoord: '1080'
        position_yCoord: '1750'
      properties:
        ip_version: 4
        cidr: ''
        start_ip: ''
        end_ip: ''
        gateway_ip: ''
        network_type: ''
    google_kubernetes_engine_cluster:
      type: cna-modeling.entities.Infrastructure
      metadata:
        label: Google Kubernetes Engine Cluster
        fontSize: '14'
        size_width: '500'
        size_height: '90'
        position_xCoord: '390'
        position_yCoord: '1880'
      properties:
        kind: software-platform
        environment_access: limited
        maintenance: automated
        provisioning: transparent
        supported_artifacts:
          - Kubernetes.Resource
          - Kubernetes.Resource.Service
          - Kubernetes.Resource.Deployment
        availability_zone: us-east1-b,us-east1-c
        region: us-east1
        supported_update_strategies: []
        deployed_entities_scaling: automated-built-in
        self_scaling: manual
        enforced_resource_bounds: true
        identities: {}
    google_compute_engine:
      type: cna-modeling.entities.Infrastructure
      metadata:
        label: Google Compute Engine
        fontSize: '14'
        size_width: '180'
        size_height: '90'
        position_xCoord: '90'
        position_yCoord: '1870'
      properties:
        kind: cloud-service
        environment_access: none
        maintenance: transparent
        provisioning: transparent
        supported_artifacts:
          - GCP.Resource
        availability_zone: us-east1-b,us-east1-c
        region: us-east1
        supported_update_strategies: []
        deployed_entities_scaling: automated-built-in
        self_scaling: automated-built-in
        enforced_resource_bounds: false
        identities: {}
    policy_management_frontend:
      type: cna-modeling.entities.Component
      metadata:
        label: Policy Management Frontend
        fontSize: '14'
        size_width: '260'
        size_height: '130'
        position_xCoord: '80'
        position_yCoord: '1170'
      properties:
        managed: false
        software_type: custom
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
      artifacts:
        policy-management-frontend-image:
          type: Image.Container.OCI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
        policy-management-frontend-app:
          type: Implementation.JavaScript
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        kubernetes deployment:
          type: Kubernetes.Resource.Deployment
          file: kubernetes/manifests/policy-management-frontend.yaml
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: true
      requirements:
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: index
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: customer
            relationship: policy_management_frontend_uses_customer
        - uses_data:
            node: policy
            relationship: policy_management_frontend_uses_policy
        - uses_data:
            node: insurance_quote
            relationship: policy_management_frontend_uses_insurance_quote
        - external_ingress_proxied_by:
            node: network_load_balancer
            relationship: cna-modeling.relationships.ProxiedBy.BackingService
        - address_resolution_by:
            node: google_kubernetes_engine_cluster
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: private_subnet
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: google_kubernetes_engine_cluster
            relationship: google_kubernetes_engine_cluster_hosts_policy_management_frontend
        - endpoint_link:
            node: getpolicy
            relationship: policy_management_frontend_linksTo_getpolicy
        - endpoint_link:
            node: deletepolicy
            relationship: policy_management_frontend_linksTo_deletepolicy
        - endpoint_link:
            node: computeriskfactor
            relationship: policy_management_frontend_linksTo_computeriskfactor
        - endpoint_link:
            node: getallpolicies
            relationship: policy_management_frontend_linksTo_getallpolicies
        - endpoint_link:
            node: createpolicy
            relationship: policy_management_frontend_linksTo_createpolicy
        - endpoint_link:
            node: respondtoinsurancequoterequest
            relationship: policy_management_frontend_linksTo_respondtoinsurancequoterequest
        - endpoint_link:
            node: getinsurancequoterequest
            relationship: policy_management_frontend_linksTo_getinsurancequoterequest
        - endpoint_link:
            node: getinsurancequotes
            relationship: policy_management_frontend_linksTo_getinsurancequotes
        - endpoint_link:
            node: getpolicies
            relationship: policy_management_frontend_linksTo_getpolicies
        - endpoint_link:
            node: getcustomer
            relationship: policy_management_frontend_linksTo_getcustomer
        - endpoint_link:
            node: getcustomers
            relationship: policy_management_frontend_linksTo_getcustomers
    policy_management_backend:
      type: cna-modeling.entities.Service
      metadata:
        label: Policy Management Backend
        fontSize: '14'
        size_width: '600'
        size_height: '514.29'
        position_xCoord: '440'
        position_yCoord: '980'
      properties:
        managed: false
        software_type: custom
        stateless: false
        load_shedding: false
        identities:
          policy-management-apikey: credentials
        namespace: default
      artifacts:
        policy-management-backend-jar:
          type: Implementation.Java
          file: policy-management-backend-0.0.2-SNAPSHOT.jar
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        policy-management-backend-image:
          type: Image.Container.OCI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
        policy-management-apidocs:
          type: OpenAPI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OpenAPI
            - self_contained: false
        kubernetes deployment:
          type: Kubernetes.Resource.Deployment
          file: kubernetes/manifests/policy-management-backend.yaml
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: insurancequoterequest
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: customerdecision
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: policycreatedevent
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: insurancequoteresponse
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: insurancequoteexpiredevent
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: updatepolicyevent
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: deletepolicyevent
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: health
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getcustomers
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getcustomer
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getpolicies
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getinsurancequotes
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getinsurancequoterequest
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: respondtoinsurancequoterequest
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: createpolicy
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: updatepolicy
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getallpolicies
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: computeriskfactor
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: deletepolicy
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getpolicy
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: policy
            relationship: policy_management_backend_uses_policy
        - uses_data:
            node: insurance_quote
            relationship: policy_management_backend_uses_insurance_quote
        - uses_data:
            node: customer
            relationship: policy_management_backend_uses_customer
        - uses_backing_data:
            node: policy_backend_secrets
            relationship: policy_management_backend_uses_policy_backend_secrets
        - uses_backing_data:
            node: policy_backend_config
            relationship: policy_management_backend_uses_policy_backend_config
        - external_ingress_proxied_by:
            node: network_load_balancer
            relationship: cna-modeling.relationships.ProxiedBy.BackingService
        - address_resolution_by:
            node: google_kubernetes_engine_cluster
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: private_subnet
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: google_kubernetes_engine_cluster
            relationship: google_kubernetes_engine_cluster_hosts_policy_management_backend
        - endpoint_link:
            node: getcustomer_b
            relationship: policy_management_backend_linksTo_getcustomer_b
        - endpoint_link:
            node: getcustomers_b
            relationship: policy_management_backend_linksTo_getcustomers_b
    risk_management_client:
      type: cna-modeling.entities.Component
      metadata:
        label: Risk Management Client
        fontSize: '14'
        size_width: '260'
        size_height: '130'
        position_xCoord: '80'
        position_yCoord: '1520'
      properties:
        managed: false
        software_type: custom
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
      artifacts:
        risk-management-client-image:
          type: Image.Container.OCI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
        risk-management-client-app:
          type: Implementation.JavaScript
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
      requirements:
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: index_a
            relationship: cna-modeling.relationships.Provides.Endpoint
        - host:
            node: google_kubernetes_engine_cluster
            relationship: google_kubernetes_engine_cluster_hosts_risk_management_client
        - endpoint_link:
            node: trigger
            relationship: risk_management_client_linksTo_trigger
    customer_management_backend:
      type: cna-modeling.entities.Service
      metadata:
        label: Customer Management Backend
        fontSize: '14'
        size_width: '540'
        size_height: '462.86'
        position_xCoord: '400'
        position_yCoord: '0'
      properties:
        managed: false
        software_type: custom
        stateless: false
        load_shedding: false
        identities:
          management-backend-apikey: credentials
        namespace: default
      artifacts:
        customer-backend-api-docs:
          type: OpenAPI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OpenAPI
            - self_contained: false
        customer-backend-jar:
          type: Implementation.Java
          file: customer-management-backend-0.0.2-SNAPSHOT.jar
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        customer-backend-image:
          type: Image.Container.OCI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
        Kubernetes Deployment:
          type: Kubernetes.Resource.Deployment
          file: kubernetes/manifests/customer-management-backend.yaml
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: health_a
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getinteractionlogs
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: updatecustomer
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getcustomer_a
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getcustomers_a
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: subscribetonotifications
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: sendmessage
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: acknowledgeinteractions
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getnotifications
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: subscribetomessages
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: interaction_log
            relationship: customer_management_backend_uses_interaction_log
        - uses_data:
            node: customer
            relationship: customer_management_backend_uses_customer
        - uses_backing_data:
            node: customer_backend_secrets
            relationship: customer_management_backend_uses_customer_backend_secrets
        - uses_backing_data:
            node: customer_backend_config
            relationship: customer_management_backend_uses_customer_backend_config
        - external_ingress_proxied_by:
            node: network_load_balancer
            relationship: cna-modeling.relationships.ProxiedBy.BackingService
        - address_resolution_by:
            node: google_kubernetes_engine_cluster
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: private_subnet
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: google_kubernetes_engine_cluster
            relationship: google_kubernetes_engine_cluster_hosts_customer_management_backend
        - endpoint_link:
            node: updatecustomer_a
            relationship: customer_management_backend_linksTo_updatecustomer_a
        - endpoint_link:
            node: getcustomer_b
            relationship: customer_management_backend_linksTo_getcustomer_b
        - endpoint_link:
            node: getcustomers_b
            relationship: customer_management_backend_linksTo_getcustomers_b
    risk_management_server:
      type: cna-modeling.entities.Service
      metadata:
        label: Risk Management Server
        fontSize: '14'
        size_width: '340'
        size_height: '291.43'
        position_xCoord: '560'
        position_yCoord: '1530'
      properties:
        managed: false
        software_type: custom
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
      artifacts:
        risk-management-backend-app:
          type: Implementation
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        risk-management-backend-image:
          type: Image.Container.OCI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
        kubernetes deployment:
          type: Kubernetes.Resource.Deployment
          file: kubernetes/manifests/risk-management-server
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: true
      requirements:
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: trigger
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: policy
            relationship: risk_management_server_uses_policy
        - uses_data:
            node: customer
            relationship: risk_management_server_uses_customer
        - uses_backing_data:
            node: risk_management_secrets
            relationship: risk_management_server_uses_risk_management_secrets
        - uses_backing_data:
            node: risk_management_config
            relationship: risk_management_server_uses_risk_management_config
        - external_ingress_proxied_by:
            node: network_load_balancer
            relationship: cna-modeling.relationships.ProxiedBy.BackingService
        - address_resolution_by:
            node: google_kubernetes_engine_cluster
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: private_subnet
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: google_kubernetes_engine_cluster
            relationship: google_kubernetes_engine_cluster_hosts_risk_management_server
        - endpoint_link:
            node: updatepolicyevent
            relationship: risk_management_server_linksTo_updatepolicyevent
        - endpoint_link:
            node: deletepolicyevent
            relationship: risk_management_server_linksTo_deletepolicyevent
    network_load_balancer:
      type: cna-modeling.entities.ProxyBackingService
      metadata:
        label: Network Load Balancer
        fontSize: '14'
        size_width: '140'
        size_height: '140'
        position_xCoord: '130'
        position_yCoord: '1680'
      properties:
        managed: false
        software_type: custom
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
        kind: other
      capabilities:
        proxy:
          properties:
            load_balancing: false
      artifacts:
        Google Compute LoadBalancer:
          type: GCP.Resource
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: true
            - based_on_standard: none
            - self_contained: false
      requirements:
        - host:
            node: google_compute_engine
            relationship: google_compute_engine_hosts_network_load_balancer
    customer_management_frontend:
      type: cna-modeling.entities.Component
      metadata:
        label: Customer Management Frontend
        fontSize: '14'
        size_width: '260'
        size_height: '130'
        position_xCoord: '60'
        position_yCoord: '100'
      properties:
        managed: false
        software_type: custom
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
      artifacts:
        customer-frontend-image:
          type: Image.Container.OCI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
        react-app:
          type: Implementation.JavaScript
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        Kubernetes Deployment:
          type: Kubernetes.Resource.Deployment
          file: kubernetes/manifests/customer-management-frontend.yaml
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: true
      requirements:
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: index_b
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: customer
            relationship: customer_management_frontend_uses_customer
        - external_ingress_proxied_by:
            node: network_load_balancer
            relationship: cna-modeling.relationships.ProxiedBy.BackingService
        - address_resolution_by:
            node: google_kubernetes_engine_cluster
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: private_subnet
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: google_kubernetes_engine_cluster
            relationship: >-
              google_kubernetes_engine_cluster_hosts_customer_management_frontend
        - endpoint_link:
            node: updatecustomer
            relationship: customer_management_frontend_linksTo_updatecustomer
        - endpoint_link:
            node: getcustomer_a
            relationship: customer_management_frontend_linksTo_getcustomer_a
        - endpoint_link:
            node: getcustomers_a
            relationship: customer_management_frontend_linksTo_getcustomers_a
        - endpoint_link:
            node: sendmessage
            relationship: customer_management_frontend_linksTo_sendmessage
        - endpoint_link:
            node: subscribetomessages
            relationship: customer_management_frontend_linksTo_subscribetomessages
    customer_core:
      type: cna-modeling.entities.Service
      metadata:
        label: Customer Core
        fontSize: '14'
        size_width: '440'
        size_height: '377.14'
        position_xCoord: '1090'
        position_yCoord: '220'
      properties:
        managed: false
        software_type: custom
        stateless: false
        load_shedding: false
        identities: {}
        namespace: default
      artifacts:
        api-doc-customer-core:
          type: OpenAPI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OpenAPI
            - self_contained: false
        customer-core-jar:
          type: Implementation.Java
          file: customer-core-0.0.2-SNAPSHOT.jar
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        customer-core-image:
          type: Image.Container.OCI
          file: customer-core
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
        kubernetes deployment:
          type: Kubernetes.Resource.Deployment
          file: kubernetes/manifests/customer-core.yaml
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getcustomers_b
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getcustomer_b
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: updatecustomer_a
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: updatecustomeraddress
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: createcustomer
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getcitiesforpostalcode
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: health_b
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: customer
            relationship: customer_core_uses_customer
        - uses_backing_data:
            node: customer_core_secrets
            relationship: customer_core_uses_customer_core_secrets
        - uses_backing_data:
            node: customer_core_config
            relationship: customer_core_uses_customer_core_config
        - external_ingress_proxied_by:
            node: network_load_balancer
            relationship: cna-modeling.relationships.ProxiedBy.BackingService
        - address_resolution_by:
            node: google_kubernetes_engine_cluster
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: private_subnet
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: google_kubernetes_engine_cluster
            relationship: google_kubernetes_engine_cluster_hosts_customer_core
    customer_self_service_frontend:
      type: cna-modeling.entities.Component
      metadata:
        label: Customer Self-Service Frontend
        fontSize: '14'
        size_width: '260'
        size_height: '130'
        position_xCoord: '20'
        position_yCoord: '430'
      properties:
        managed: false
        software_type: custom
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
      artifacts:
        customer-self-service-frontend:
          type: Image.Container.OCI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
        React App:
          type: Implementation.JavaScript
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        kubernetes deployment:
          type: Kubernetes.Resource.Deployment
          file: kubernetes/manifests/customer-self-service-frontend.yaml
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: true
      requirements:
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: index_c
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: customer
            relationship: customer_self_service_frontend_uses_customer
        - uses_data:
            node: insurance_quote
            relationship: customer_self_service_frontend_uses_insurance_quote
        - external_ingress_proxied_by:
            node: network_load_balancer
            relationship: cna-modeling.relationships.ProxiedBy.BackingService
        - address_resolution_by:
            node: google_kubernetes_engine_cluster
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: private_subnet
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: google_kubernetes_engine_cluster
            relationship: >-
              google_kubernetes_engine_cluster_hosts_customer_self_service_frontend
        - endpoint_link:
            node: sendmessage
            relationship: customer_self_service_frontend_linksTo_sendmessage
        - endpoint_link:
            node: get_user
            relationship: customer_self_service_frontend_linksTo_get_user
        - endpoint_link:
            node: updateinsurancequoterequest
            relationship: customer_self_service_frontend_linksTo_updateinsurancequoterequest
        - endpoint_link:
            node: createinsurancequoterequest
            relationship: customer_self_service_frontend_linksTo_createinsurancequoterequest
        - endpoint_link:
            node: getinsurancequoterequest_a
            relationship: customer_self_service_frontend_linksTo_getinsurancequoterequest_a
        - endpoint_link:
            node: getinsurancequotes_a
            relationship: customer_self_service_frontend_linksTo_getinsurancequotes_a
        - endpoint_link:
            node: registercustomer
            relationship: customer_self_service_frontend_linksTo_registercustomer
        - endpoint_link:
            node: getcustomer_c
            relationship: customer_self_service_frontend_linksTo_getcustomer_c
        - endpoint_link:
            node: updateaddress
            relationship: customer_self_service_frontend_linksTo_updateaddress
        - endpoint_link:
            node: getcitiesforpostalcode_a
            relationship: customer_self_service_frontend_linksTo_getcitiesforpostalcode_a
        - endpoint_link:
            node: signup
            relationship: customer_self_service_frontend_linksTo_signup
        - endpoint_link:
            node: auth
            relationship: customer_self_service_frontend_linksTo_auth
        - endpoint_link:
            node: subscribetomessages
            relationship: customer_self_service_frontend_linksTo_subscribetomessages
    spring_boot_admin:
      type: cna-modeling.entities.BackingService
      metadata:
        label: Spring Boot Admin
        fontSize: '14'
        size_width: '240'
        size_height: '240'
        position_xCoord: '1180'
        position_yCoord: '10'
      properties:
        managed: false
        software_type: custom
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
        providedFunctionality: other
        replication_strategy: none
      artifacts:
        admin-service-jar:
          type: Implementation.Java
          file: spring-boot-admin-0.0.2-SNAPSHOT.jar
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        admin-service-image:
          type: Image.Container.OCI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
        kubernetes deployment:
          type: Kubernetes.Resource.Deployment
          file: kubernetes/manifests/spring-boot-admin.yaml
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: health_c
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_backing_data:
            node: springboot_admin_config
            relationship: spring_boot_admin_uses_springboot_admin_config
        - external_ingress_proxied_by:
            node: network_load_balancer
            relationship: cna-modeling.relationships.ProxiedBy.BackingService
        - address_resolution_by:
            node: google_kubernetes_engine_cluster
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: private_subnet
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: google_kubernetes_engine_cluster
            relationship: google_kubernetes_engine_cluster_hosts_spring_boot_admin
        - endpoint_link:
            node: health_b
            relationship: spring_boot_admin_linksTo_health_b
        - endpoint_link:
            node: health_a
            relationship: spring_boot_admin_linksTo_health_a
        - endpoint_link:
            node: health
            relationship: spring_boot_admin_linksTo_health
        - endpoint_link:
            node: health_d
            relationship: spring_boot_admin_linksTo_health_d
    customer_self_service_backend:
      type: cna-modeling.entities.Service
      metadata:
        label: Customer Self-Service Backend
        fontSize: '14'
        size_width: '601.6700000000001'
        size_height: '515.72'
        position_xCoord: '390'
        position_yCoord: '480'
      properties:
        managed: false
        software_type: custom
        stateless: false
        load_shedding: false
        identities:
          customer-self-service-apikey: credentials
        namespace: default
      artifacts:
        customer-self-service:
          type: Implementation.Java
          file: customer-self-service-backend-0.0.2-SNAPSHOT.jar
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        customer-self-service-image:
          type: Image.Container.OCI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
        customer-self-service-apidoc:
          type: OpenAPI
          file: ''
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OpenAPI
            - self_contained: false
        kubernetes deployment:
          type: Kubernetes.Resource.Deployment
          file: kubernetes/manifests/customer-self-service-backend.yaml
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: health_d
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: auth
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: signup
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getcitiesforpostalcode_a
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: updateaddress
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getcustomer_c
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: registercustomer
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getinsurancequotes_a
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getinsurancequoterequests
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getinsurancequoterequest_a
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: createinsurancequoterequest
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: updateinsurancequoterequest
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: get_user
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: customer
            relationship: customer_self_service_backend_uses_customer
        - uses_data:
            node: user
            relationship: customer_self_service_backend_uses_user
        - uses_data:
            node: insurance_quote
            relationship: customer_self_service_backend_uses_insurance_quote
        - uses_backing_data:
            node: self_service_secrets
            relationship: customer_self_service_backend_uses_self_service_secrets
        - uses_backing_data:
            node: customer_self_service_config
            relationship: customer_self_service_backend_uses_customer_self_service_config
        - external_ingress_proxied_by:
            node: network_load_balancer
            relationship: cna-modeling.relationships.ProxiedBy.BackingService
        - address_resolution_by:
            node: google_kubernetes_engine_cluster
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: private_subnet
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: google_kubernetes_engine_cluster
            relationship: >-
              google_kubernetes_engine_cluster_hosts_customer_self_service_backend
        - endpoint_link:
            node: getcustomer_b
            relationship: customer_self_service_backend_linksTo_getcustomer_b
        - endpoint_link:
            node: updatecustomeraddress
            relationship: customer_self_service_backend_linksTo_updatecustomeraddress
        - endpoint_link:
            node: createcustomer
            relationship: customer_self_service_backend_linksTo_createcustomer
        - endpoint_link:
            node: getcitiesforpostalcode
            relationship: customer_self_service_backend_linksTo_getcitiesforpostalcode
        - endpoint_link:
            node: insurancequoteexpiredevent
            relationship: customer_self_service_backend_linksTo_insurancequoteexpiredevent
        - endpoint_link:
            node: insurancequoteresponse
            relationship: customer_self_service_backend_linksTo_insurancequoteresponse
        - endpoint_link:
            node: policycreatedevent
            relationship: customer_self_service_backend_linksTo_policycreatedevent
        - endpoint_link:
            node: customerdecision
            relationship: customer_self_service_backend_linksTo_customerdecision
        - endpoint_link:
            node: insurancequoterequest
            relationship: customer_self_service_backend_linksTo_insurancequoterequest
    index:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: index
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '90'
        position_yCoord: '1220'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
    insurancequoterequest:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: InsuranceQuoteRequest
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '900'
        position_yCoord: '1225.7150000000001'
      properties:
        kind: send event
        method_name: send
        protocol: JMS
        port: ''
        supported_authentication_methods: []
        url_path: insurance-quote-request-event-queue
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: insurance_quote
    customerdecision:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: CustomerDecision
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '880'
        position_yCoord: '1135.7150000000001'
      properties:
        kind: send event
        method_name: send
        protocol: JMS
        port: ''
        supported_authentication_methods: []
        url_path: customer-decision-event-queue
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: insurance_quote
    policycreatedevent:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: PolicyCreatedEvent
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '850'
        position_yCoord: '1032.8600000000001'
      properties:
        kind: subscribe
        method_name: subscribe
        protocol: JMS
        port: ''
        supported_authentication_methods: []
        url_path: policy-created-event-queue
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: policy
    insurancequoteresponse:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: InsuranceQuoteResponse
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '810'
        position_yCoord: '1092.8600000000001'
      properties:
        kind: subscribe
        method_name: subscribe
        protocol: JMS
        port: ''
        supported_authentication_methods: []
        url_path: insurance-quote-response-event-queue
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: insurance_quote
    insurancequoteexpiredevent:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: InsuranceQuoteExpiredEvent
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '890'
        position_yCoord: '1082.8600000000001'
      properties:
        kind: subscribe
        method_name: subscribe
        protocol: JMS
        port: ''
        supported_authentication_methods: []
        url_path: insurance-quote-expired-event-queue
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: insurance_quote
    updatepolicyevent:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: UpdatePolicyEvent
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '880'
        position_yCoord: '1332.8600000000001'
      properties:
        kind: subscribe
        method_name: subscribe
        protocol: JMS
        port: ''
        supported_authentication_methods: []
        url_path: newpolicies
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: policy
    deletepolicyevent:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: DeletePolicyEvent
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '900'
        position_yCoord: '1282.8600000000001'
      properties:
        kind: subscribe
        method_name: subscribe
        protocol: JMS
        port: ''
        supported_authentication_methods: []
        url_path: newpolicies
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: policy
    health:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: Health
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '940'
        position_yCoord: '1170'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /actuator/health
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: true
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    getcustomers:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: GetCustomers
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '600'
        position_yCoord: '1045.7150000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /customers
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - policy-management-apidocs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    getcustomer:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: getCustomer
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '570'
        position_yCoord: '1095.7150000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /customers/{customerIdDto}
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - policy-management-apidocs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    getpolicies:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: getPolicies
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '540'
        position_yCoord: '1145.7150000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /customers/{customerIdDto}/policies
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - policy-management-apidocs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
        - uses_data: policy
    getinsurancequotes:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: getInsuranceQuotes
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '510'
        position_yCoord: '1195.7150000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /insurance-quote-requests
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - policy-management-apidocs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: insurance_quote
    getinsurancequoterequest:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: getInsuranceQuoteRequest
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '540'
        position_yCoord: '1245.7150000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /insurance-quote-requests/{id}
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - policy-management-apidocs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: insurance_quote
    respondtoinsurancequoterequest:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: respondToInsuranceQuoteRequest
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '570'
        position_yCoord: '1295.7150000000001'
      properties:
        kind: command
        method_name: PATCH
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /insurance-quote-requests/[id}
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - policy-management-apidocs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: insurance_quote
    createpolicy:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: createPolicy
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '660'
        position_yCoord: '1365.7150000000001'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /policies
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - policy-management-apidocs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: policy
    updatepolicy:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: updatePolicy
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '780'
        position_yCoord: '1365.7150000000001'
      properties:
        kind: command
        method_name: PUT
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /policies/{policyId}
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - policy-management-apidocs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: policy
    getallpolicies:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: getAllPolicies
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '830'
        position_yCoord: '1325.7150000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /policies
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - policy-management-apidocs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: policy
    computeriskfactor:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: computeRiskFactor
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '600'
        position_yCoord: '1145.7150000000001'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /riskfactor
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - policy-management-apidocs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
    deletepolicy:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: deletePolicy
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '720'
        position_yCoord: '1362.8600000000001'
      properties:
        kind: command
        method_name: DELETE
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /policies/{policyId}
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - policy-management-apidocs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: policy
    getpolicy:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: getPolicy
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '640'
        position_yCoord: '1280'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /policies/{policyId}
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - policy-management-apidocs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: policy
    index_a:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: index
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '160'
        position_yCoord: '1560'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
    health_a:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: Health
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '740'
        position_yCoord: '112.86000000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /actuator/health
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: true
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    getinteractionlogs:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: GetInteractionLogs
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '660'
        position_yCoord: '325.71500000000003'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /interaction-logs/{customerId}
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - customer-backend-api-docs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: interaction_log
    updatecustomer:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: updateCustomer
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '560'
        position_yCoord: '315.71500000000003'
      properties:
        kind: command
        method_name: PUT
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /customers/{id}
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - customer-backend-api-docs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    getcustomer_a:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: GetCustomer
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '520'
        position_yCoord: '255.71500000000003'
      properties:
        kind: query
        method_name: GET
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: /customers/{id}
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - customer-backend-api-docs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    getcustomers_a:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: GetCustomers
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '480'
        position_yCoord: '195.715'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /customers
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - customer-backend-api-docs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    subscribetonotifications:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: subscribeToNotifications
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '560'
        position_yCoord: '195.715'
      properties:
        kind: subscribe
        method_name: SUBSCRIBE
        protocol: STOMP
        port: ''
        supported_authentication_methods: []
        url_path: /topic/notifications
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - customer-backend-api-docs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: interaction_log
    sendmessage:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: SendMessage
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '490'
        position_yCoord: '132.86'
      properties:
        kind: send event
        method_name: SEND
        protocol: STOMP
        port: ''
        supported_authentication_methods: []
        url_path: /topic/messages/
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - customer-backend-api-docs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: interaction_log
    acknowledgeinteractions:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: acknowledgeInteractions
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '720'
        position_yCoord: '332.86'
      properties:
        kind: command
        method_name: PATCH
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /interaction-logs/{customerId}
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - customer-backend-api-docs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: interaction_log
    getnotifications:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: getNotifications
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '610'
        position_yCoord: '322.86'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /notifications
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - customer-backend-api-docs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: interaction_log
    subscribetomessages:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: subscribeToMessages
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '540'
        position_yCoord: '100'
      properties:
        kind: subscribe
        method_name: SUBSCRIBE
        protocol: STOMP
        port: ''
        supported_authentication_methods: []
        url_path: /topic/messages
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - customer-backend-api-docs
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
    trigger:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: Trigger
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '630'
        position_yCoord: '1610'
      properties:
        kind: command
        method_name: rpc
        protocol: gRPC
        port: ''
        supported_authentication_methods: []
        url_path: Trigger
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
        - uses_data: policy
    index_b:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: index
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '150'
        position_yCoord: '155'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    getcustomers_b:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: GetCustomers
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1220'
        position_yCoord: '282.855'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - API-Key
        url_path: /customers
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to:
          - policy-management-apikey
          - management-backend-apikey
          - customer-self-service-apikey
        documented_by:
          - api-doc-customer-core
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    getcustomer_b:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: GetCustomer
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1180'
        position_yCoord: '342.855'
      properties:
        kind: query
        method_name: GET
        protocol: tcp
        port: ''
        supported_authentication_methods:
          - API-Key
        url_path: /customers/{id}
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to:
          - policy-management-apikey
          - management-backend-apikey
          - customer-self-service-apikey
        documented_by:
          - api-doc-customer-core
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    updatecustomer_a:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: updateCustomer
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1170'
        position_yCoord: '402.855'
      properties:
        kind: command
        method_name: PUT
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - API-Key
        url_path: /customers/{id}
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to:
          - policy-management-apikey
          - management-backend-apikey
          - customer-self-service-apikey
        documented_by:
          - api-doc-customer-core
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    updatecustomeraddress:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: updateCustomerAddress
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1220'
        position_yCoord: '462.855'
      properties:
        kind: command
        method_name: PUT
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - API-Key
        url_path: /customers/{id}/address
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to:
          - policy-management-apikey
          - management-backend-apikey
          - customer-self-service-apikey
        documented_by:
          - api-doc-customer-core
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    createcustomer:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: createCustomer
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1280'
        position_yCoord: '462.855'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - API-Key
        url_path: /customers
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to:
          - policy-management-apikey
          - management-backend-apikey
          - customer-self-service-apikey
        documented_by:
          - api-doc-customer-core
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    getcitiesforpostalcode:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: getCitiesForPostalCode
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1350'
        position_yCoord: '462.855'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - API-Key
        url_path: /cities/postalCode
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to:
          - policy-management-apikey
          - management-backend-apikey
          - customer-self-service-apikey
        documented_by:
          - api-doc-customer-core
      capabilities:
        endpoint:
          properties: {}
    health_b:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: Health
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1260'
        position_yCoord: '382.855'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /actuator/health
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: true
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    index_c:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: index
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '120'
        position_yCoord: '490'
      properties:
        kind: query
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
    health_c:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: Health
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1230'
        position_yCoord: '100'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /actuator/health
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: true
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    health_d:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: Health
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '830'
        position_yCoord: '610'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /actuator/health
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: true
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    auth:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: auth
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '710.835'
        position_yCoord: '609.2900000000001'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /auth
        rate_limiting: 60 requests per minute
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - customer-self-service-apidoc
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: user
    signup:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: signup
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '640.835'
        position_yCoord: '609.2900000000001'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /auth/signup
        rate_limiting: 60 requests per minute
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - customer-self-service-apidoc
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: user
    getcitiesforpostalcode_a:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: getCitiesForPostalCode
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '560.835'
        position_yCoord: '609.2900000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /cities/{postalCode}
        rate_limiting: 60 requests per minute
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to:
          - external account
        documented_by:
          - customer-self-service-apidoc
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
    updateaddress:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: updateAddress
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '550.835'
        position_yCoord: '659.2900000000001'
      properties:
        kind: command
        method_name: PUT
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /customers/{customerId}/address
        rate_limiting: 60 requests per minute
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to:
          - external account
        documented_by:
          - customer-self-service-apidoc
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    getcustomer_c:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: getCustomer
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '520.835'
        position_yCoord: '709.2900000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /customers/{customerId}
        rate_limiting: 60 requests per minute
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to:
          - external account
        documented_by:
          - customer-self-service-apidoc
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    registercustomer:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: registerCustomer
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '530.835'
        position_yCoord: '759.2900000000001'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /customers
        rate_limiting: 60 requests per minute
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to:
          - external account
        documented_by:
          - customer-self-service-apidoc
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
    getinsurancequotes_a:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: getInsuranceQuotes
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '550.835'
        position_yCoord: '809.2900000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /customers/{customerId}/insurance-quote-requests
        rate_limiting: 60 requests per minute
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to:
          - external account
        documented_by:
          - customer-self-service-apidoc
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
        - uses_data: insurance_quote
    getinsurancequoterequests:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: getInsuranceQuoteRequests
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '630.835'
        position_yCoord: '679.2900000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /insurance-quote-requests
        rate_limiting: 60 requests per minute
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to:
          - external account
        documented_by:
          - customer-self-service-apidoc
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: insurance_quote
    getinsurancequoterequest_a:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: getInsuranceQuoteRequest
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '620.835'
        position_yCoord: '749.2900000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /insurance-quote-requests/{insuranceQuoteRequestId}
        rate_limiting: 60 requests per minute
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to:
          - external account
        documented_by:
          - customer-self-service-apidoc
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
        - uses_data: insurance_quote
    createinsurancequoterequest:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: createInsuranceQuoteRequest
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '620.835'
        position_yCoord: '809.2900000000001'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /insurance-quote-requests
        rate_limiting: 60 requests per minute
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to:
          - external account
        documented_by:
          - customer-self-service-apidoc
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
        - uses_data: insurance_quote
    updateinsurancequoterequest:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: updateInsuranceQuoteRequest
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '680.835'
        position_yCoord: '829.2900000000001'
      properties:
        kind: command
        method_name: PATCH
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /insurance-quote-requests/{id}
        rate_limiting: 60 requests per minute
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to:
          - external account
        documented_by:
          - customer-self-service-apidoc
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: customer
        - uses_data: insurance_quote
    get_user:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: get user
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '680.835'
        position_yCoord: '769.2900000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods:
          - Token
        url_path: /user
        rate_limiting: 60 requests per minute
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by:
          - customer-self-service-apidoc
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: user
    signup_a:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: Signup
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '1680'
        position_yCoord: '70'
      properties:
        nodes: []
        involved_links: []
      requirements:
        - external_endpoint:
            node: signup
            relationship: cna-modeling.relationships.PartOf
    complete_registration:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: Complete registration
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '1680'
        position_yCoord: '160'
      properties:
        nodes:
          - customer_self_service_backend
          - customer_core
        involved_links:
          - - customer_self_service_backend_linksTo_createcustomer
      requirements:
        - external_endpoint:
            node: registercustomer
            relationship: cna-modeling.relationships.PartOf
    request_insurance_quote:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: Request Insurance Quote
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '1680'
        position_yCoord: '280'
      properties:
        nodes:
          - customer_self_service_backend
          - policy_management_backend
        involved_links:
          - - customer_self_service_backend_linksTo_insurancequoterequest
      requirements:
        - external_endpoint:
            node: createinsurancequoterequest
            relationship: cna-modeling.relationships.PartOf
    respond_to_insurance_quote:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: Respond to insurance quote
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '1690'
        position_yCoord: '370'
      properties:
        nodes:
          - customer_self_service_backend
          - policy_management_backend
        involved_links:
          - - customer_self_service_backend_linksTo_insurancequoteresponse
      requirements:
        - external_endpoint:
            node: respondtoinsurancequoterequest
            relationship: cna-modeling.relationships.PartOf
    accept_insurance_quote:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: Accept insurance quote
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '1690'
        position_yCoord: '470'
      properties:
        nodes:
          - customer_self_service_backend
          - policy_management_backend
        involved_links:
          - - customer_self_service_backend_linksTo_customerdecision
      requirements:
        - external_endpoint:
            node: updateinsurancequoterequest
            relationship: cna-modeling.relationships.PartOf
    create_policy:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: Create Policy
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '1690'
        position_yCoord: '580'
      properties:
        nodes:
          - risk_management_server
          - policy_management_backend
        involved_links:
          - - risk_management_server_linksTo_updatepolicyevent
      requirements:
        - external_endpoint:
            node: createpolicy
            relationship: cna-modeling.relationships.PartOf
  relationship_templates:
    policy_management_frontend_uses_customer:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Customer
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '240'
        position_yCoord: '1190'
      properties:
        usage_relation: usage
        sharding_level: 0
    policy_management_frontend_uses_policy:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Policy
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '240'
        position_yCoord: '1240'
      properties:
        usage_relation: usage
        sharding_level: 0
    policy_management_frontend_uses_insurance_quote:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Insurance Quote
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '150'
        position_yCoord: '1220'
      properties:
        usage_relation: usage
        sharding_level: 0
    policy_management_backend_uses_policy:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Policy
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '680'
        position_yCoord: '1092.8600000000001'
      properties:
        usage_relation: persistence
        sharding_level: 0
    policy_management_backend_uses_insurance_quote:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Insurance Quote
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '670'
        position_yCoord: '1152.8600000000001'
      properties:
        usage_relation: persistence
        sharding_level: 0
    policy_management_backend_uses_customer:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Customer
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '670'
        position_yCoord: '1202.8600000000001'
      properties:
        usage_relation: usage
        sharding_level: 0
    policy_management_backend_uses_policy_backend_secrets:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Policy Backend Secrets
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '710'
        position_yCoord: '1320'
      properties:
        usage_relation: persistence
    policy_management_backend_uses_policy_backend_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Policy Backend Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '710'
        position_yCoord: '1270'
      properties:
        usage_relation: persistence
    customer_management_backend_uses_interaction_log:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Interaction Log
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '750'
        position_yCoord: '262.86'
      properties:
        usage_relation: persistence
        sharding_level: 0
    customer_management_backend_uses_customer:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Customer
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '630'
        position_yCoord: '262.86'
      properties:
        usage_relation: usage
        sharding_level: 0
    customer_management_backend_uses_customer_backend_secrets:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Customer Backend Secrets
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '630'
        position_yCoord: '202.86'
      properties:
        usage_relation: persistence
    customer_management_backend_uses_customer_backend_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Customer Backend Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '740'
        position_yCoord: '202.86'
      properties:
        usage_relation: persistence
    risk_management_server_uses_policy:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Policy
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '690'
        position_yCoord: '1705.715'
      properties:
        usage_relation: persistence
        sharding_level: 0
    risk_management_server_uses_customer:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Customer
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '690'
        position_yCoord: '1752.86'
      properties:
        usage_relation: persistence
        sharding_level: 0
    risk_management_server_uses_risk_management_secrets:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Risk Management Secrets
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '690'
        position_yCoord: '1590'
      properties:
        usage_relation: persistence
    risk_management_server_uses_risk_management_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Risk Management Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '700'
        position_yCoord: '1660'
      properties:
        usage_relation: persistence
    customer_management_frontend_uses_customer:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Customer
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '200'
        position_yCoord: '150'
      properties:
        usage_relation: usage
        sharding_level: 0
    customer_core_uses_customer:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Customer
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '1310'
        position_yCoord: '372.855'
      properties:
        usage_relation: persistence
        sharding_level: 0
    customer_core_uses_customer_core_secrets:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Customer Core Secrets
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1320'
        position_yCoord: '290'
      properties:
        usage_relation: persistence
    customer_core_uses_customer_core_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Customer Core Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1320'
        position_yCoord: '330'
      properties:
        usage_relation: persistence
    customer_self_service_frontend_uses_customer:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Customer
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '170'
        position_yCoord: '460'
      properties:
        usage_relation: usage
        sharding_level: 0
    customer_self_service_frontend_uses_insurance_quote:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Insurance Quote
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '170'
        position_yCoord: '510'
      properties:
        usage_relation: usage
        sharding_level: 0
    spring_boot_admin_uses_springboot_admin_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: SpringBoot Admin Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1290'
        position_yCoord: '110'
      properties:
        usage_relation: persistence
    customer_self_service_backend_uses_customer:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Customer
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '710.835'
        position_yCoord: '652.1450000000001'
      properties:
        usage_relation: usage
        sharding_level: 0
    customer_self_service_backend_uses_user:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: User
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '710'
        position_yCoord: '712.86'
      properties:
        usage_relation: persistence
        sharding_level: 0
    customer_self_service_backend_uses_insurance_quote:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Insurance Quote
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '760'
        position_yCoord: '772.86'
      properties:
        usage_relation: persistence
        sharding_level: 0
    customer_self_service_backend_uses_self_service_secrets:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Self-Service Secrets
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '740'
        position_yCoord: '862.86'
      properties:
        usage_relation: persistence
    customer_self_service_backend_uses_customer_self_service_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Customer Self-Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '740'
        position_yCoord: '820'
      properties:
        usage_relation: persistence
    google_kubernetes_engine_cluster_hosts_policy_management_frontend:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Kubernetes.Resource.Deployment
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onProcessFailure
        assigned_account: default-account
        resource_requirements: unstated
    google_kubernetes_engine_cluster_hosts_policy_management_backend:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Kubernetes.Resource.Deployment
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onProcessFailure
        assigned_account: default-account
        resource_requirements: unstated
    google_kubernetes_engine_cluster_hosts_risk_management_client:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Kubernetes.Resource.Deployment
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onProcessFailure
        assigned_account: default-account
        resource_requirements: unstated
    google_kubernetes_engine_cluster_hosts_customer_management_backend:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Kubernetes.Resource.Deployment
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onProcessFailure
        assigned_account: default-account
        resource_requirements: unstated
    google_kubernetes_engine_cluster_hosts_risk_management_server:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Kubernetes.Resource.Deployment
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onProcessFailure
        assigned_account: default-account
        resource_requirements: unstated
    google_compute_engine_hosts_network_load_balancer:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: transparent
        deployment_unit: GCP.Resource
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onProcessFailure
        assigned_account: default-account
        resource_requirements: unstated
    google_kubernetes_engine_cluster_hosts_customer_management_frontend:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Kubernetes.Resource.Deployment
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onProcessFailure
        assigned_account: default-account
        resource_requirements: unstated
    google_kubernetes_engine_cluster_hosts_customer_core:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Kubernetes.Resource.Deployment
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onProcessFailure
        assigned_account: default-account
        resource_requirements: unstated
    google_kubernetes_engine_cluster_hosts_customer_self_service_frontend:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Kubernetes.Resource.Deployment
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onProcessFailure
        assigned_account: default-account
        resource_requirements: unstated
    google_kubernetes_engine_cluster_hosts_spring_boot_admin:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Kubernetes.Resource.Deployment
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onProcessFailure
        assigned_account: default-account
        resource_requirements: unstated
    google_kubernetes_engine_cluster_hosts_customer_self_service_backend:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Kubernetes.Resource.Deployment
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onProcessFailure
        assigned_account: default-account
        resource_requirements: unstated
    policy_management_frontend_linksTo_getpolicy:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    policy_management_frontend_linksTo_deletepolicy:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    policy_management_frontend_linksTo_computeriskfactor:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    policy_management_frontend_linksTo_getallpolicies:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    policy_management_frontend_linksTo_createpolicy:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    policy_management_frontend_linksTo_respondtoinsurancequoterequest:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    policy_management_frontend_linksTo_getinsurancequoterequest:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    policy_management_frontend_linksTo_getinsurancequotes:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    policy_management_frontend_linksTo_getpolicies:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    policy_management_frontend_linksTo_getcustomer:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    policy_management_frontend_linksTo_getcustomers:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    policy_management_backend_linksTo_getcustomer_b:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    policy_management_backend_linksTo_getcustomers_b:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    risk_management_client_linksTo_trigger:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_management_backend_linksTo_updatecustomer_a:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_management_backend_linksTo_getcustomer_b:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_management_backend_linksTo_getcustomers_b:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    risk_management_server_linksTo_updatepolicyevent:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    risk_management_server_linksTo_deletepolicyevent:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_management_frontend_linksTo_updatecustomer:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_management_frontend_linksTo_getcustomer_a:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_management_frontend_linksTo_getcustomers_a:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_management_frontend_linksTo_sendmessage:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_management_frontend_linksTo_subscribetomessages:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_sendmessage:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_get_user:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_updateinsurancequoterequest:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_createinsurancequoterequest:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_getinsurancequoterequest_a:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_getinsurancequotes_a:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_registercustomer:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_getcustomer_c:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_updateaddress:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_getcitiesforpostalcode_a:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_signup:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_auth:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_frontend_linksTo_subscribetomessages:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    spring_boot_admin_linksTo_health_b:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    spring_boot_admin_linksTo_health_a:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    spring_boot_admin_linksTo_health:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    spring_boot_admin_linksTo_health_d:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_backend_linksTo_getcustomer_b:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: getDummyCustomer
    customer_self_service_backend_linksTo_updatecustomeraddress:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_backend_linksTo_createcustomer:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_backend_linksTo_getcitiesforpostalcode:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_backend_linksTo_insurancequoteexpiredevent:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_backend_linksTo_insurancequoteresponse:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_backend_linksTo_policycreatedevent:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_backend_linksTo_customerdecision:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customer_self_service_backend_linksTo_insurancequoterequest:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
