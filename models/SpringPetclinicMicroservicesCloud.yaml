tosca_definitions_version: tosca_2_0
metadata:
  template_author: CNA modeling tool
  template_name: spring-petclinic-microservices-cloud
  template_version: '0.2'
description: Service template generated by the CNA modeling tool
service_template:
  description: Topology template generated by the CNA modeling tool
  node_templates:
    visit:
      type: cna-modeling.entities.DataAggregate
      metadata:
        label: Visit
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '1190'
        position_yCoord: '963.75'
      capabilities:
        provides_data: {}
    vet:
      type: cna-modeling.entities.DataAggregate
      metadata:
        label: Vet
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '1180'
        position_yCoord: '693.75'
      capabilities:
        provides_data: {}
    pet:
      type: cna-modeling.entities.DataAggregate
      metadata:
        label: Pet
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '1200'
        position_yCoord: '326.25'
      capabilities:
        provides_data: {}
    owner:
      type: cna-modeling.entities.DataAggregate
      metadata:
        label: Owner
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '1200'
        position_yCoord: '376.25'
      capabilities:
        provides_data: {}
    customers_service_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Customers Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1590'
        position_yCoord: '320'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          spring.zipkin.baseUrl: http://tracing-server:9411
          server.port: '8081'
          eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    visits_service_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Visits Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1600'
        position_yCoord: '360'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          spring.zipkin.baseUrl: http://tracing-server:9411
          server.port: '8082'
          eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    frontend_service_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Frontend Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1600'
        position_yCoord: '400'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          'spring.cloud.gateway.routes[id: vets-service]': lb:http://vets-service
          'spring.cloud.gateway.routes[id: visits-service]': lb:http://visits-service
          'spring.cloud.gateway.routes[id: customers-service]': lb:http://customers-service
          server.port: '8080'
          zipkin.baseUrl: http://tracing-server:9411
          eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    general_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: General Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1490'
        position_yCoord: '280'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          server.port: '0'
          sleuth.sampler.probability: '1.0'
          cloud.services.registrationMethod: direct
          management.security.enabled: 'false'
          wavefront.application.name: pet-clinic-microservices-local
          management.endpoint.metrics.enabled: 'true'
          management.endpoint.prometheus.enabled: 'true'
          management.metrics.export.prometheus.enabled: 'true'
          eureka.client.fetchRegistry: 'true'
          spring.cloud.kubernetes.discovery.enabled: 'false'
    vets_service_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Vets Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1590'
        position_yCoord: '280'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          vets.cache.ttl: '60'
          vets.cache.heap.size: '100'
          spring.zipkin.baseUrl: http://tracing-server:9411
          server.port: '8083'
          eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    discovery_server_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Discovery Server Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1690'
        position_yCoord: '270'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          server.port: '8761'
          eureka.instance.hostname: localhost
          eureka.client.registerWithEureka: 'false'
          eureka.client.fetchRegistry: 'false'
          eureka.client.serviceUrl: http://${eureka.instance.hostname}:${server.port}/eureka/
    admin_server_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Admin Server Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1690'
        position_yCoord: '230'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          server.port: '9090'
          spring.eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    tracing_server_config:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Tracing Server Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1490'
        position_yCoord: '240'
      capabilities:
        provides_data: {}
      properties:
        kind: config
        included_data:
          server.port: '9411'
          eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka/
    metrics_visits:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Metrics Visits
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '700'
        position_yCoord: '1125.7150000000001'
      capabilities:
        provides_data: {}
      properties:
        kind: metrics
        included_data: {}
    logs_visits:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Logs Visits
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '700'
        position_yCoord: '1090'
      capabilities:
        provides_data: {}
      properties:
        kind: logs
        included_data: {}
    logs_vets:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Logs Vets
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '690'
        position_yCoord: '692.86'
      capabilities:
        provides_data: {}
      properties:
        kind: logs
        included_data: {}
    metrics_customer:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Metrics Customer
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '640'
        position_yCoord: '272.86'
      capabilities:
        provides_data: {}
      properties:
        kind: metrics
        included_data: {}
    logs_customers:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Logs Customers
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '640'
        position_yCoord: '232.86'
      capabilities:
        provides_data: {}
      properties:
        kind: logs
        included_data: {}
    logs_frontend:
      type: cna-modeling.entities.BackingData
      metadata:
        label: Logs Frontend
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '380'
        position_yCoord: '645.715'
      capabilities:
        provides_data: {}
      properties:
        kind: logs
        included_data: {}
    docker_default_network:
      type: cna-modeling.entities.Network
      metadata:
        label: Docker default network
        fontSize: '14'
        size_width: '100'
        size_height: '100'
        position_xCoord: '2060'
        position_yCoord: '960'
      properties:
        ip_version: 4
        cidr: ''
        start_ip: ''
        end_ip: ''
        gateway_ip: ''
        network_type: ''
    docker_host:
      type: cna-modeling.entities.Infrastructure
      metadata:
        label: Docker Host
        fontSize: '14'
        size_width: '1000'
        size_height: '90'
        position_xCoord: '460'
        position_yCoord: '1210'
      properties:
        kind: software-platform
        environment_access: full
        maintenance: manual
        provisioning: manual
        supported_artifacts: []
        availability_zone: default-zone
        region: default-region
        supported_update_strategies: []
        deployed_entities_scaling: none
        self_scaling: none
        enforced_resource_bounds: false
        identities: {}
    config_server:
      type: cna-modeling.entities.BackingService
      metadata:
        label: Config Server
        fontSize: '14'
        size_width: '500'
        size_height: '500'
        position_xCoord: '1390'
        position_yCoord: '90'
      properties:
        managed: false
        software_type: open-source
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
        providedFunctionality: configuration
        replication_strategy: none
      artifacts:
        config server image:
          type: Image.Container.OCI
          file: springcommunity/spring-petclinic-cloud--config-server
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: tracing_server
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: admin_server
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: api_gateway
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: application_cloud
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: discovery_server
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: customers_service_cloud
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: vets_service_cloud
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: visits_service_cloud
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_backing_data:
            node: customers_service_config
            relationship: config_server_uses_customers_service_config
        - uses_backing_data:
            node: visits_service_config
            relationship: config_server_uses_visits_service_config
        - uses_backing_data:
            node: frontend_service_config
            relationship: config_server_uses_frontend_service_config
        - uses_backing_data:
            node: general_config
            relationship: config_server_uses_general_config
        - uses_backing_data:
            node: vets_service_config
            relationship: config_server_uses_vets_service_config
        - uses_backing_data:
            node: discovery_server_config
            relationship: config_server_uses_discovery_server_config
        - uses_backing_data:
            node: admin_server_config
            relationship: config_server_uses_admin_server_config
        - uses_backing_data:
            node: tracing_server_config
            relationship: config_server_uses_tracing_server_config
        - address_resolution_by:
            node: docker_default_network
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: docker_default_network
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: docker_host
            relationship: docker_host_hosts_config_server
    visits_database:
      type: cna-modeling.entities.StorageBackingService
      metadata:
        label: Visits Database
        fontSize: '14'
        size_width: '260'
        size_height: '227.5'
        position_xCoord: '1100'
        position_yCoord: '860'
      properties:
        managed: false
        software_type: open-source
        stateless: false
        load_shedding: false
        identities: {}
        namespace: default
        name: ''
        shards: 1
        replication_strategy: none
      artifacts:
        mysql image:
          type: Image.Container.OCI
          file: mysql/mysql-server
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: sql_read_visit
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: sql_write_visit
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: visit
            relationship: visits_database_uses_visit
        - host:
            node: docker_host
            relationship: docker_host_hosts_visits_database
    vets_database:
      type: cna-modeling.entities.StorageBackingService
      metadata:
        label: Vets Database
        fontSize: '14'
        size_width: '260'
        size_height: '227.5'
        position_xCoord: '1090'
        position_yCoord: '570'
      properties:
        managed: false
        software_type: open-source
        stateless: false
        load_shedding: false
        identities: {}
        namespace: default
        name: ''
        shards: 1
        replication_strategy: none
      artifacts:
        mysql image:
          type: Image.Container.OCI
          file: mysql/mysql-server
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: sql_read
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: vet
            relationship: vets_database_uses_vet
        - host:
            node: docker_host
            relationship: docker_host_hosts_vets_database
    customers_database:
      type: cna-modeling.entities.StorageBackingService
      metadata:
        label: Customers Database
        fontSize: '14'
        size_width: '320'
        size_height: '280'
        position_xCoord: '1050'
        position_yCoord: '200'
      properties:
        managed: false
        software_type: open-source
        stateless: false
        load_shedding: false
        identities: {}
        namespace: default
        name: Customers
        shards: 1
        replication_strategy: none
      artifacts:
        mysql image:
          type: Image.Container.OCI
          file: mysql/mysql-server
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: sql_read_pet
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: sql_write_pet
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: sql_write_owner
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: sql_read_owner
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: pet
            relationship: customers_database_uses_pet
        - uses_data:
            node: owner
            relationship: customers_database_uses_owner
        - host:
            node: docker_host
            relationship: docker_host_hosts_customers_database
    visits_service:
      type: cna-modeling.entities.Service
      metadata:
        label: Visits Service
        fontSize: '14'
        size_width: '440'
        size_height: '377.14'
        position_xCoord: '500'
        position_yCoord: '830'
      properties:
        managed: false
        software_type: custom
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
      artifacts:
        visits webservice:
          type: Implementation.Java
          file: application.jar
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        visits service image:
          type: Image.Container.OCI
          file: springcommunity/spring-petclinic-cloud-visits-servic
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: create_visit
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: read_by_pet
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: read_all_visits
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: health
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: metrics
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: visit
            relationship: visits_service_uses_visit
        - uses_backing_data:
            node: visits_service_config
            relationship: visits_service_uses_visits_service_config
        - uses_backing_data:
            node: general_config
            relationship: visits_service_uses_general_config
        - uses_backing_data:
            node: metrics_visits
            relationship: visits_service_uses_metrics_visits
        - uses_backing_data:
            node: logs_visits
            relationship: visits_service_uses_logs_visits
        - address_resolution_by:
            node: docker_default_network
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: docker_default_network
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: docker_host
            relationship: docker_host_hosts_visits_service
        - endpoint_link:
            node: visits_service_cloud
            relationship: visits_service_linksTo_visits_service_cloud
        - endpoint_link:
            node: sql_read_visit
            relationship: visits_service_linksTo_sql_read_visit
        - endpoint_link:
            node: sql_write_visit
            relationship: visits_service_linksTo_sql_write_visit
        - endpoint_link:
            node: register_instance
            relationship: visits_service_linksTo_register_instance
        - endpoint_link:
            node: add_span
            relationship: visits_service_linksTo_add_span
    vets_service:
      type: cna-modeling.entities.Service
      metadata:
        label: Vets Service
        fontSize: '14'
        size_width: '340'
        size_height: '291.43'
        position_xCoord: '550'
        position_yCoord: '520'
      properties:
        managed: false
        software_type: custom
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
      artifacts:
        vets webservice:
          type: Implementation.Java
          file: application.jar
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        vets service image:
          type: Image.Container.OCI
          file: springcommunity/spring-petclinic-cloud-vets-service
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: getallvets
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: health_a
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: vet
            relationship: vets_service_uses_vet
        - uses_backing_data:
            node: general_config
            relationship: vets_service_uses_general_config
        - uses_backing_data:
            node: vets_service_config
            relationship: vets_service_uses_vets_service_config
        - uses_backing_data:
            node: logs_vets
            relationship: vets_service_uses_logs_vets
        - address_resolution_by:
            node: docker_default_network
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: docker_default_network
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: docker_host
            relationship: docker_host_hosts_vets_service
        - endpoint_link:
            node: vets_service_cloud
            relationship: vets_service_linksTo_vets_service_cloud
        - endpoint_link:
            node: sql_read
            relationship: vets_service_linksTo_sql_read
        - endpoint_link:
            node: register_instance
            relationship: vets_service_linksTo_register_instance
        - endpoint_link:
            node: add_span
            relationship: vets_service_linksTo_add_span
    customers_service:
      type: cna-modeling.entities.Service
      metadata:
        label: Customers Service
        fontSize: '14'
        size_width: '540'
        size_height: '462.86'
        position_xCoord: '460'
        position_yCoord: '70'
      properties:
        managed: false
        software_type: custom
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
      artifacts:
        customers webservice:
          type: Implementation.Java
          file: application.jar
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        customers service image:
          type: Image.Container.OCI
          file: springcommunity/spring-petclinic-cloud-customers-service
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: false
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: get_all_owners
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: create_owner
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: find_owner
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: update_owner
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: get_pet_types
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: create_pet
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: update_pet
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: find_pet
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: health_b
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: metrics_a
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: pet
            relationship: customers_service_uses_pet
        - uses_data:
            node: owner
            relationship: customers_service_uses_owner
        - uses_backing_data:
            node: customers_service_config
            relationship: customers_service_uses_customers_service_config
        - uses_backing_data:
            node: general_config
            relationship: customers_service_uses_general_config
        - uses_backing_data:
            node: metrics_customer
            relationship: customers_service_uses_metrics_customer
        - uses_backing_data:
            node: logs_customers
            relationship: customers_service_uses_logs_customers
        - address_resolution_by:
            node: docker_default_network
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: docker_default_network
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: docker_host
            relationship: docker_host_hosts_customers_service
        - endpoint_link:
            node: customers_service_cloud
            relationship: customers_service_linksTo_customers_service_cloud
        - endpoint_link:
            node: sql_write_owner
            relationship: customers_service_linksTo_sql_write_owner
        - endpoint_link:
            node: sql_write_pet
            relationship: customers_service_linksTo_sql_write_pet
        - endpoint_link:
            node: sql_read_owner
            relationship: customers_service_linksTo_sql_read_owner
        - endpoint_link:
            node: sql_read_pet
            relationship: customers_service_linksTo_sql_read_pet
        - endpoint_link:
            node: register_instance
            relationship: customers_service_linksTo_register_instance
        - endpoint_link:
            node: add_span
            relationship: customers_service_linksTo_add_span
    frontend_and_gateway:
      type: cna-modeling.entities.Service
      metadata:
        label: Frontend and Gateway
        fontSize: '14'
        size_width: '540'
        size_height: '462.86'
        position_xCoord: '20'
        position_yCoord: '320'
      properties:
        managed: false
        software_type: custom
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
      artifacts:
        frontend webapp:
          type: Implementation.Java
          file: application.jar
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: none
            - self_contained: false
        frontend image:
          type: Image.Container.OCI
          file: springcommunity/spring-petclinic-cloud-api-gateway
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: health_c
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: createpet
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: updatepet
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: vetlist
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: ownerdetails
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: createowner
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: updateowner
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: ownerlist
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: createvisit
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: listvisits
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_data:
            node: vet
            relationship: frontend_and_gateway_uses_vet
        - uses_data:
            node: pet
            relationship: frontend_and_gateway_uses_pet
        - uses_data:
            node: owner
            relationship: frontend_and_gateway_uses_owner
        - uses_data:
            node: visit
            relationship: frontend_and_gateway_uses_visit
        - uses_backing_data:
            node: frontend_service_config
            relationship: frontend_and_gateway_uses_frontend_service_config
        - uses_backing_data:
            node: general_config
            relationship: frontend_and_gateway_uses_general_config
        - uses_backing_data:
            node: logs_frontend
            relationship: frontend_and_gateway_uses_logs_frontend
        - address_resolution_by:
            node: eureka_discovery_service
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: docker_default_network
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: docker_host
            relationship: docker_host_hosts_frontend_and_gateway
        - endpoint_link:
            node: api_gateway
            relationship: frontend_and_gateway_linksTo_api_gateway
        - endpoint_link:
            node: create_visit
            relationship: frontend_and_gateway_linksTo_create_visit
        - endpoint_link:
            node: read_by_pet
            relationship: frontend_and_gateway_linksTo_read_by_pet
        - endpoint_link:
            node: getallvets
            relationship: frontend_and_gateway_linksTo_getallvets
        - endpoint_link:
            node: get_all_owners
            relationship: frontend_and_gateway_linksTo_get_all_owners
        - endpoint_link:
            node: find_pet
            relationship: frontend_and_gateway_linksTo_find_pet
        - endpoint_link:
            node: update_pet
            relationship: frontend_and_gateway_linksTo_update_pet
        - endpoint_link:
            node: get_pet_types
            relationship: frontend_and_gateway_linksTo_get_pet_types
        - endpoint_link:
            node: create_pet
            relationship: frontend_and_gateway_linksTo_create_pet
        - endpoint_link:
            node: update_owner
            relationship: frontend_and_gateway_linksTo_update_owner
        - endpoint_link:
            node: create_owner
            relationship: frontend_and_gateway_linksTo_create_owner
        - endpoint_link:
            node: find_owner
            relationship: frontend_and_gateway_linksTo_find_owner
        - endpoint_link:
            node: read_instances
            relationship: frontend_and_gateway_linksTo_read_instances
        - endpoint_link:
            node: register_instance
            relationship: frontend_and_gateway_linksTo_register_instance
        - endpoint_link:
            node: add_span
            relationship: frontend_and_gateway_linksTo_add_span
    eureka_discovery_service:
      type: cna-modeling.entities.BackingService
      metadata:
        label: Eureka Discovery Service
        fontSize: '14'
        size_width: '240'
        size_height: '240'
        position_xCoord: '1410'
        position_yCoord: '530'
      properties:
        managed: false
        software_type: open-source
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
        providedFunctionality: naming/addressing
        replication_strategy: none
      artifacts:
        discovery service image:
          type: Image.Container.OCI
          file: springcommunity/spring-petclinic-cloud-discovery-server
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: register_instance
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: read_instances
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_backing_data:
            node: discovery_server_config
            relationship: eureka_discovery_service_uses_discovery_server_config
        - address_resolution_by:
            node: docker_default_network
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: docker_default_network
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: docker_host
            relationship: docker_host_hosts_eureka_discovery_service
        - endpoint_link:
            node: discovery_server
            relationship: eureka_discovery_service_linksTo_discovery_server
    spring_boot_admin_server:
      type: cna-modeling.entities.BackingService
      metadata:
        label: Spring Boot Admin Server
        fontSize: '14'
        size_width: '250'
        size_height: '250'
        position_xCoord: '1700'
        position_yCoord: '590'
      properties:
        managed: false
        software_type: open-source
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
        providedFunctionality: other
        replication_strategy: none
      artifacts:
        admin server image:
          type: Image.Container.OCI
          file: springcommunity/spring-petclinic-cloud-admin-server
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
      requirements:
        - uses_backing_data:
            node: admin_server_config
            relationship: spring_boot_admin_server_uses_admin_server_config
        - address_resolution_by:
            node: docker_default_network
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: docker_default_network
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: docker_host
            relationship: docker_host_hosts_spring_boot_admin_server
        - endpoint_link:
            node: admin_server
            relationship: spring_boot_admin_server_linksTo_admin_server
        - endpoint_link:
            node: health
            relationship: spring_boot_admin_server_linksTo_health
        - endpoint_link:
            node: health_c
            relationship: spring_boot_admin_server_linksTo_health_c
        - endpoint_link:
            node: health_a
            relationship: spring_boot_admin_server_linksTo_health_a
        - endpoint_link:
            node: health_b
            relationship: spring_boot_admin_server_linksTo_health_b
    zipkin:
      type: cna-modeling.entities.BackingService
      metadata:
        label: Zipkin
        fontSize: '14'
        size_width: '240'
        size_height: '240'
        position_xCoord: '1500'
        position_yCoord: '730'
      properties:
        managed: false
        software_type: open-source
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
        providedFunctionality: tracing
        replication_strategy: none
      artifacts:
        zipkin image:
          type: Image.Container.OCI
          file: openzipkin/zipkin
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: read_spans
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: read_traces
            relationship: cna-modeling.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: add_span
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_backing_data:
            node: tracing_server_config
            relationship: zipkin_uses_tracing_server_config
        - address_resolution_by:
            node: docker_default_network
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: docker_default_network
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: docker_host
            relationship: docker_host_hosts_zipkin
        - endpoint_link:
            node: tracing_server
            relationship: zipkin_linksTo_tracing_server
    prometheus:
      type: cna-modeling.entities.BackingService
      metadata:
        label: Prometheus
        fontSize: '14'
        size_width: '240'
        size_height: '240'
        position_xCoord: '1700'
        position_yCoord: '820'
      properties:
        managed: false
        software_type: open-source
        stateless: false
        load_shedding: false
        identities: {}
        namespace: default
        providedFunctionality: metrics
        replication_strategy: none
      artifacts:
        prometheus image:
          type: Image.Container.OCI
          file: /docker/prometheus
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
      requirements:
        - provides_endpoint:
            capability: cna-modeling.capabilities.Endpoint
            node: data_export
            relationship: cna-modeling.relationships.Provides.Endpoint
        - uses_backing_data:
            node: metrics_visits
            relationship: prometheus_uses_metrics_visits
        - uses_backing_data:
            node: metrics_customer
            relationship: prometheus_uses_metrics_customer
        - address_resolution_by:
            node: docker_default_network
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: docker_default_network
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: docker_host
            relationship: docker_host_hosts_prometheus
        - endpoint_link:
            node: metrics
            relationship: prometheus_linksTo_metrics
        - endpoint_link:
            node: metrics_a
            relationship: prometheus_linksTo_metrics_a
    grafana:
      type: cna-modeling.entities.BackingService
      metadata:
        label: Grafana
        fontSize: '14'
        size_width: '140'
        size_height: '140'
        position_xCoord: '1560'
        position_yCoord: '1000'
      properties:
        managed: false
        software_type: open-source
        stateless: true
        load_shedding: false
        identities: {}
        namespace: default
        providedFunctionality: other
        replication_strategy: none
      artifacts:
        grafana image:
          type: Image.Container.OCI
          file: docker/grafana
          repository: ''
          description: ''
          deploy_path: ''
          artifact_version: ''
          checksum: ''
          checksum_algorithm: ''
          properties:
            - provider_specific: false
            - based_on_standard: OCI
            - self_contained: true
      requirements:
        - address_resolution_by:
            node: docker_default_network
            relationship: cna-modeling.relationships.UseAddressResolution
        - assigned_to_network:
            node: docker_default_network
            relationship: cna-modeling.relationships.LinksTo
        - host:
            node: docker_host
            relationship: docker_host_hosts_grafana
        - endpoint_link:
            node: data_export
            relationship: grafana_linksTo_data_export
    tracing_server:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: tracing-server
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1810'
        position_yCoord: '260'
      properties:
        kind: query
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    admin_server:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: admin-server
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1760'
        position_yCoord: '300'
      properties:
        kind: query
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    api_gateway:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: api-gateway
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1420'
        position_yCoord: '270'
      properties:
        kind: query
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    application_cloud:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: application-cloud
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1610'
        position_yCoord: '150'
      properties:
        kind: query
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    discovery_server:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: discovery-server
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1710'
        position_yCoord: '340'
      properties:
        kind: query
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    customers_service_cloud:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: customers-service-cloud
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1550'
        position_yCoord: '160'
      properties:
        kind: query
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    vets_service_cloud:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: vets-service-cloud
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1490'
        position_yCoord: '320'
      properties:
        kind: query
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    visits_service_cloud:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: visits-service-cloud
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1540'
        position_yCoord: '360'
      properties:
        kind: query
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    sql_read_visit:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: SQL read visit
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1110'
        position_yCoord: '903.75'
      properties:
        kind: query
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: visit
    sql_write_visit:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: SQL write visit
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1110'
        position_yCoord: '973.75'
      properties:
        kind: command
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: visit
    sql_read:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: SQL Read
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1110'
        position_yCoord: '623.75'
      properties:
        kind: query
        method_name: Query
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: vet
    sql_read_pet:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: SQL read pet
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1070'
        position_yCoord: '226.25'
      properties:
        kind: query
        method_name: SQL read
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: pet
    sql_write_pet:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: SQL write pet
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1070'
        position_yCoord: '346.25'
      properties:
        kind: command
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: pet
    sql_write_owner:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: SQL write owner
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1070'
        position_yCoord: '406.25'
      properties:
        kind: command
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: owner
    sql_read_owner:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: SQL read owner
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1070'
        position_yCoord: '286.25'
      properties:
        kind: query
        method_name: ''
        protocol: tcp
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: owner
    create_visit:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: create visit
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '650'
        position_yCoord: '1038.5700000000002'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners/*/pets/{petId}/visits
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: visit
    read_by_pet:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: read by pet
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '630'
        position_yCoord: '965.715'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners/*/pets/{petId}/visits
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: visit
    read_all_visits:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: read all visits
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '710'
        position_yCoord: '1035.7150000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /pets/visits
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: visit
    health:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: Health
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '810'
        position_yCoord: '975.715'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: true
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    metrics:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: Metrics
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '820'
        position_yCoord: '1055.7150000000001'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    getallvets:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: getAllVets
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '580'
        position_yCoord: '632.86'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /vets
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: vet
    health_a:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: Health
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '810'
        position_yCoord: '622.86'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: true
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    get_all_owners:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: get all owners
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '610'
        position_yCoord: '125.715'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: owner
    create_owner:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: create owner
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '580'
        position_yCoord: '175.715'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: owner
    find_owner:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: find owner
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '550'
        position_yCoord: '225.715'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners/{ownerId}
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: owner
    update_owner:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: update owner
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '540'
        position_yCoord: '285.71500000000003'
      properties:
        kind: command
        method_name: PUT
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners/{ownerId]
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: owner
    get_pet_types:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: get pet types
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '570'
        position_yCoord: '335.71500000000003'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /petTypes
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: pet
    create_pet:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: create pet
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '600'
        position_yCoord: '385.71500000000003'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners/{ownerId}/pets
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: pet
    update_pet:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: update pet
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '670'
        position_yCoord: '405.71500000000003'
      properties:
        kind: command
        method_name: PUT
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners/*/pets/{petId}
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: owner
        - uses_data: pet
    find_pet:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: find pet
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '730'
        position_yCoord: '405.71500000000003'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners/*/pets/{petId}
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
      requirements:
        - uses_data: pet
    health_b:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: Health
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '870'
        position_yCoord: '262.86'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: true
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    metrics_a:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: Metrics
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '850'
        position_yCoord: '352.86'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    health_c:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: Health
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '410'
        position_yCoord: '415.71500000000003'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: true
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    createpet:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: createPet
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '150'
        position_yCoord: '415.71500000000003'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners/{ownerId}/new-pet
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: owner
        - uses_data: pet
    updatepet:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: updatePet
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '200'
        position_yCoord: '375.71500000000003'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners/{ownerId}/pets/{petId}
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: owner
        - uses_data: pet
    vetlist:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: vetList
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '120'
        position_yCoord: '465.71500000000003'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /vets
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: vet
    ownerdetails:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: ownerDetails
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '100'
        position_yCoord: '525.715'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owner/details/{ownerId}
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: owner
    createowner:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: createOwner
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '130'
        position_yCoord: '575.715'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners/new
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: owner
    updateowner:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: updateOwner
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '160'
        position_yCoord: '625.715'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owner/{ownerId}/edit
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: owner
    ownerlist:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: ownerList
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '210'
        position_yCoord: '655.715'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: owner
    createvisit:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: createVisit
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '270'
        position_yCoord: '655.715'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners/{ownerId}/pets/{petId}/visits
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: visit
    listvisits:
      type: cna-modeling.entities.Endpoint.External
      metadata:
        label: listVisits
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '330'
        position_yCoord: '655.715'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /owners/{ownerId}/pets/{petId}/visits
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
        external_endpoint:
          properties: {}
      requirements:
        - uses_data: owner
        - uses_data: pet
        - uses_data: visit
    register_instance:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: register instance
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1440'
        position_yCoord: '610'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    read_instances:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: read instances
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1490'
        position_yCoord: '650'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    read_spans:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: read spans
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1570'
        position_yCoord: '840'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /spans
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    read_traces:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: read traces
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1630'
        position_yCoord: '820'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /traces
        rate_limiting: none
        idempotent: true
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    add_span:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: add span
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1530'
        position_yCoord: '790'
      properties:
        kind: command
        method_name: POST
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: /spans
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    data_export:
      type: cna-modeling.entities.Endpoint
      metadata:
        label: Data export
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '1730'
        position_yCoord: '890'
      properties:
        kind: query
        method_name: GET
        protocol: HTTP
        port: ''
        supported_authentication_methods: []
        url_path: ''
        rate_limiting: none
        idempotent: false
        readiness_check: false
        health_check: false
        allow_access_to: []
        documented_by: []
      capabilities:
        endpoint:
          properties: {}
    list_vets:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: List vets
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '1990'
        position_yCoord: '70'
      properties:
        nodes:
          - frontend_and_gateway
          - vets_service
          - vets_database
        involved_links:
          - - frontend_and_gateway_linksTo_getallvets
          - - vets_service_linksTo_sql_read
      requirements:
        - external_endpoint:
            node: vetlist
            relationship: cna-modeling.relationships.PartOf
    create_owner_a:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: Create Owner
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '1990'
        position_yCoord: '170'
      properties:
        nodes:
          - frontend_and_gateway
          - customers_service
          - customers_database
        involved_links:
          - - frontend_and_gateway_linksTo_create_owner
          - - customers_service_linksTo_sql_write_owner
      requirements:
        - external_endpoint:
            node: createowner
            relationship: cna-modeling.relationships.PartOf
    update_owner_a:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: Update Owner
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '1990'
        position_yCoord: '260'
      properties:
        nodes:
          - frontend_and_gateway
          - customers_service
          - customers_database
        involved_links:
          - - frontend_and_gateway_linksTo_update_owner
          - - customers_service_linksTo_sql_write_owner
      requirements:
        - external_endpoint:
            node: updateowner
            relationship: cna-modeling.relationships.PartOf
    list_owners:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: List owners
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '1990'
        position_yCoord: '350'
      properties:
        nodes:
          - frontend_and_gateway
          - customers_service
          - customers_database
        involved_links:
          - - frontend_and_gateway_linksTo_get_all_owners
          - - customers_service_linksTo_sql_read_owner
      requirements:
        - external_endpoint:
            node: ownerlist
            relationship: cna-modeling.relationships.PartOf
    find_owner_a:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: Find Owner
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '2000'
        position_yCoord: '440'
      properties:
        nodes:
          - frontend_and_gateway
          - customers_service
          - customers_database
        involved_links:
          - - frontend_and_gateway_linksTo_find_owner
          - - customers_service_linksTo_sql_read_owner
      requirements:
        - external_endpoint:
            node: ownerdetails
            relationship: cna-modeling.relationships.PartOf
    create_pet_a:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: Create Pet
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '2010'
        position_yCoord: '540'
      properties:
        nodes:
          - frontend_and_gateway
          - customers_service
          - customers_database
        involved_links:
          - - frontend_and_gateway_linksTo_create_pet
          - - customers_service_linksTo_sql_write_pet
      requirements:
        - external_endpoint:
            node: createpet
            relationship: cna-modeling.relationships.PartOf
    update_pet_a:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: Update Pet
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '2000'
        position_yCoord: '630'
      properties:
        nodes:
          - frontend_and_gateway
          - customers_service
          - customers_database
        involved_links:
          - - frontend_and_gateway_linksTo_update_pet
          - - customers_service_linksTo_sql_write_pet
      requirements:
        - external_endpoint:
            node: updatepet
            relationship: cna-modeling.relationships.PartOf
    create_visit_a:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: Create Visit
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '2010'
        position_yCoord: '720'
      properties:
        nodes:
          - frontend_and_gateway
          - visits_service
          - visits_database
        involved_links:
          - - frontend_and_gateway_linksTo_create_visit
          - - visits_service_linksTo_sql_write_visit
      requirements:
        - external_endpoint:
            node: createvisit
            relationship: cna-modeling.relationships.PartOf
    list_visits:
      type: cna-modeling.entities.RequestTrace
      metadata:
        label: List Visits
        fontSize: '14'
        size_width: '190'
        size_height: '76'
        position_xCoord: '2010'
        position_yCoord: '810'
      properties:
        nodes:
          - frontend_and_gateway
          - visits_service
          - visits_database
        involved_links:
          - - frontend_and_gateway_linksTo_read_by_pet
          - - visits_service_linksTo_sql_read_visit
      requirements:
        - external_endpoint:
            node: listvisits
            relationship: cna-modeling.relationships.PartOf
  relationship_templates:
    config_server_uses_customers_service_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Customers Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1590'
        position_yCoord: '320'
      properties:
        usage_relation: persistence
    config_server_uses_visits_service_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Visits Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1600'
        position_yCoord: '360'
      properties:
        usage_relation: persistence
    config_server_uses_frontend_service_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Frontend Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1600'
        position_yCoord: '400'
      properties:
        usage_relation: persistence
    config_server_uses_general_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: General Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1490'
        position_yCoord: '280'
      properties:
        usage_relation: persistence
    config_server_uses_vets_service_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Vets Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1590'
        position_yCoord: '280'
      properties:
        usage_relation: persistence
    config_server_uses_discovery_server_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Discovery Server Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1690'
        position_yCoord: '270'
      properties:
        usage_relation: persistence
    config_server_uses_admin_server_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Admin Server Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1690'
        position_yCoord: '230'
      properties:
        usage_relation: persistence
    config_server_uses_tracing_server_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Tracing Server Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1490'
        position_yCoord: '240'
      properties:
        usage_relation: persistence
    visits_database_uses_visit:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Visit
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '1190'
        position_yCoord: '963.75'
      properties:
        usage_relation: persistence
        sharding_level: 0
    vets_database_uses_vet:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Vet
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '1180'
        position_yCoord: '693.75'
      properties:
        usage_relation: persistence
        sharding_level: 0
    customers_database_uses_pet:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Pet
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '1200'
        position_yCoord: '326.25'
      properties:
        usage_relation: persistence
        sharding_level: 0
    customers_database_uses_owner:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Owner
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '1200'
        position_yCoord: '376.25'
      properties:
        usage_relation: persistence
        sharding_level: 0
    visits_service_uses_visit:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Visit
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '680'
        position_yCoord: '988.57'
      properties:
        usage_relation: cached-usage
        sharding_level: 0
    visits_service_uses_visits_service_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Visits Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '690'
        position_yCoord: '955.715'
      properties:
        usage_relation: cached-usage
    visits_service_uses_general_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: General Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '690'
        position_yCoord: '915.715'
      properties:
        usage_relation: cached-usage
    visits_service_uses_metrics_visits:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Metrics Visits
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '700'
        position_yCoord: '1125.7150000000001'
      properties:
        usage_relation: usage
    visits_service_uses_logs_visits:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Logs Visits
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '700'
        position_yCoord: '1090'
      properties:
        usage_relation: persistence
    vets_service_uses_vet:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Vet
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '630'
        position_yCoord: '722.86'
      properties:
        usage_relation: cached-usage
        sharding_level: 0
    vets_service_uses_general_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: General Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '690'
        position_yCoord: '612.86'
      properties:
        usage_relation: cached-usage
    vets_service_uses_vets_service_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Vets Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '690'
        position_yCoord: '652.86'
      properties:
        usage_relation: cached-usage
    vets_service_uses_logs_vets:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Logs Vets
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '690'
        position_yCoord: '692.86'
      properties:
        usage_relation: persistence
    customers_service_uses_pet:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Pet
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '750'
        position_yCoord: '255.71500000000003'
      properties:
        usage_relation: cached-usage
        sharding_level: 0
    customers_service_uses_owner:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Owner
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '750'
        position_yCoord: '305.71500000000003'
      properties:
        usage_relation: cached-usage
        sharding_level: 0
    customers_service_uses_customers_service_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Customers Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '640'
        position_yCoord: '312.86'
      properties:
        usage_relation: cached-usage
    customers_service_uses_general_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: General Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '640'
        position_yCoord: '352.86'
      properties:
        usage_relation: cached-usage
    customers_service_uses_metrics_customer:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Metrics Customer
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '640'
        position_yCoord: '272.86'
      properties:
        usage_relation: usage
    customers_service_uses_logs_customers:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Logs Customers
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '640'
        position_yCoord: '232.86'
      properties:
        usage_relation: persistence
    frontend_and_gateway_uses_vet:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Vet
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '260'
        position_yCoord: '578.575'
      properties:
        usage_relation: usage
        sharding_level: 0
    frontend_and_gateway_uses_pet:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Pet
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '260'
        position_yCoord: '528.575'
      properties:
        usage_relation: usage
        sharding_level: 0
    frontend_and_gateway_uses_owner:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Owner
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '260'
        position_yCoord: '478.57500000000005'
      properties:
        usage_relation: usage
        sharding_level: 0
    frontend_and_gateway_uses_visit:
      type: cna-modeling.relationships.AttachesTo.DataAggregate
      metadata:
        label: Visit
        fontSize: '13'
        size_width: '50'
        size_height: '25'
        position_xCoord: '370'
        position_yCoord: '515.715'
      properties:
        usage_relation: usage
        sharding_level: 0
    frontend_and_gateway_uses_frontend_service_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Frontend Service Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '370'
        position_yCoord: '565.715'
      properties:
        usage_relation: cached-usage
    frontend_and_gateway_uses_general_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: General Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '370'
        position_yCoord: '605.715'
      properties:
        usage_relation: cached-usage
    frontend_and_gateway_uses_logs_frontend:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Logs Frontend
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '380'
        position_yCoord: '645.715'
      properties:
        usage_relation: persistence
    eureka_discovery_service_uses_discovery_server_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Discovery Server Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1520'
        position_yCoord: '620'
      properties:
        usage_relation: cached-usage
    spring_boot_admin_server_uses_admin_server_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Admin Server Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1775'
        position_yCoord: '715'
      properties:
        usage_relation: cached-usage
    zipkin_uses_tracing_server_config:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Tracing Server Config
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1590'
        position_yCoord: '770'
      properties:
        usage_relation: cached-usage
    prometheus_uses_metrics_visits:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Metrics Visits
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1800'
        position_yCoord: '910'
      properties:
        usage_relation: persistence
    prometheus_uses_metrics_customer:
      type: cna-modeling.relationships.AttachesTo.BackingData
      metadata:
        label: Metrics Customer
        fontSize: '14'
        size_width: '95'
        size_height: '30'
        position_xCoord: '1780'
        position_yCoord: '950'
      properties:
        usage_relation: persistence
    docker_host_hosts_config_server:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    docker_host_hosts_visits_database:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    docker_host_hosts_vets_database:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    docker_host_hosts_customers_database:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    docker_host_hosts_visits_service:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    docker_host_hosts_vets_service:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    docker_host_hosts_customers_service:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    docker_host_hosts_frontend_and_gateway:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    docker_host_hosts_eureka_discovery_service:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    docker_host_hosts_spring_boot_admin_server:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    docker_host_hosts_zipkin:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    docker_host_hosts_prometheus:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    docker_host_hosts_grafana:
      type: cna-modeling.relationships.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: Image.Container.OCI
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onReboot
        assigned_account: default-account
        resource_requirements: unstated
    visits_service_linksTo_visits_service_cloud:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    visits_service_linksTo_sql_read_visit:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    visits_service_linksTo_sql_write_visit:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    visits_service_linksTo_register_instance:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    visits_service_linksTo_add_span:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    vets_service_linksTo_vets_service_cloud:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    vets_service_linksTo_sql_read:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    vets_service_linksTo_register_instance:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    vets_service_linksTo_add_span:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customers_service_linksTo_customers_service_cloud:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customers_service_linksTo_sql_write_owner:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customers_service_linksTo_sql_write_pet:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customers_service_linksTo_sql_read_owner:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customers_service_linksTo_sql_read_pet:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customers_service_linksTo_register_instance:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    customers_service_linksTo_add_span:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    frontend_and_gateway_linksTo_api_gateway:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    frontend_and_gateway_linksTo_create_visit:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 10000
        retries: 1
        circuit_breaker: defaultCircuitBreaker
    frontend_and_gateway_linksTo_read_by_pet:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 10000
        retries: 1
        circuit_breaker: defaultCircuitBreaker
    frontend_and_gateway_linksTo_getallvets:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 10000
        retries: 1
        circuit_breaker: defaultCircuitBreaker
    frontend_and_gateway_linksTo_get_all_owners:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 10000
        retries: 1
        circuit_breaker: defaultCircuitBreaker
    frontend_and_gateway_linksTo_find_pet:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 10000
        retries: 1
        circuit_breaker: defaultCircuitBreaker
    frontend_and_gateway_linksTo_update_pet:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 10000
        retries: 1
        circuit_breaker: defaultCircuitBreaker
    frontend_and_gateway_linksTo_get_pet_types:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 10000
        retries: 1
        circuit_breaker: defaultCircuitBreaker
    frontend_and_gateway_linksTo_create_pet:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 10000
        retries: 1
        circuit_breaker: defaultCircuitBreaker
    frontend_and_gateway_linksTo_update_owner:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 10000
        retries: 1
        circuit_breaker: defaultCircuitBreaker
    frontend_and_gateway_linksTo_create_owner:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 10000
        retries: 1
        circuit_breaker: defaultCircuitBreaker
    frontend_and_gateway_linksTo_find_owner:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 10000
        retries: 1
        circuit_breaker: defaultCircuitBreaker
    frontend_and_gateway_linksTo_read_instances:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    frontend_and_gateway_linksTo_register_instance:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    frontend_and_gateway_linksTo_add_span:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    eureka_discovery_service_linksTo_discovery_server:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    spring_boot_admin_server_linksTo_admin_server:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    spring_boot_admin_server_linksTo_health:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    spring_boot_admin_server_linksTo_health_c:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    spring_boot_admin_server_linksTo_health_a:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    spring_boot_admin_server_linksTo_health_b:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    zipkin_linksTo_tracing_server:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    prometheus_linksTo_metrics:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    prometheus_linksTo_metrics_a:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    grafana_linksTo_data_export:
      type: cna-modeling.relationships.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
